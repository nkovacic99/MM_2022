// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

struct Body {
    float3 position;
    float mass;
    float3 force;
};

float G;
int numBodies;

RWStructuredBuffer<Body> bodies;

[numthreads(100,1,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    float i = id.x;
    float3 force = { 0.0f, 0.0f, 0.0f };

    for (int j = 0; j < numBodies; j++) {
        if (i == j) continue;
        float3 distVector = bodies[j].position - bodies[i].position;
        float scalar = G * bodies[i].mass * bodies[j].mass / pow(length(distVector), 3);
        force += scalar * distVector;
    }

    bodies[i].force = force;
}
